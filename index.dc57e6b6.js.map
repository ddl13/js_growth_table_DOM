{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAU,SAAS,gBAAgB,CAAC,WACpC,EAAS,SAAS,aAAa,CAAC,eAChC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAe,SAAS,aAAa,CAAC,kBAEtC,EAAQ,SAAS,aAAa,CAAC,gBACjC,EAAO,EAAM,gBAAgB,CAAC,MAAM,MAAM,CAC1C,EAAO,EAAM,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAKpD,EAAoB,WACxB,EAAO,QAAQ,CAAG,GAJR,GAKV,EAAU,QAAQ,CAAG,GAJX,EAKV,EAAU,QAAQ,CAAG,GANX,GAOV,EAAa,QAAQ,CAAG,GANd,CAOZ,EAEC,EAAG,GAAS,OAAO,CAAC,SAAC,CAArB,EACC,EAAO,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EACE,OAAQ,EAAE,MAAM,EACd,KAAK,EACC,EAdA,KAeF,EAAM,MAAM,CAAC,EAAM,gBAAgB,CAAC,SAAS,CAAC,CAAA,IAC9C,KAEF,KAEF,MAAK,EACC,EApBA,IAqBF,EAAM,gBAAgB,CAAC,MAAM,GAC7B,KAEF,KAEF,MAAK,EACC,EA5BA,KA6BD,EAAG,EAAM,QAAQ,EAAE,OAAO,CAAC,SAAC,CAA5B,EACC,EAAI,MAAM,CAAC,EAAI,gBAAgB,CAAC,SAAS,CAAC,CAAA,GAC5C,GACA,KAEF,KAEF,MAAK,EACC,EApCA,IAqCD,EAAG,EAAM,QAAQ,EAAE,OAAO,CAAC,SAAC,CAA5B,EAAoC,OAAA,EAAI,gBAAgB,CAAC,MAAM,E,GAChE,IAMN,CACA,GACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar buttons = document.querySelectorAll(\".button\");\nvar addRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar addColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nvar table = document.querySelector(\".field tbody\");\nvar rows = table.querySelectorAll(\"tr\").length;\nvar cols = table.querySelectorAll(\"tr\")[0].children.length;\nvar max = 10;\nvar min = 2;\nvar updateButtonState = function() {\n    addRow.disabled = rows >= max;\n    removeRow.disabled = rows <= min;\n    addColumn.disabled = cols >= max;\n    removeColumn.disabled = cols <= min;\n};\n_to_consumable_array(buttons).forEach(function(button) {\n    button.addEventListener(\"click\", function(e) {\n        switch(e.target){\n            case addRow:\n                if (rows < max) {\n                    table.append(table.lastElementChild.cloneNode(true));\n                    rows++;\n                }\n                break;\n            case removeRow:\n                if (rows > min) {\n                    table.lastElementChild.remove();\n                    rows--;\n                }\n                break;\n            case addColumn:\n                if (cols < max) {\n                    _to_consumable_array(table.children).forEach(function(row) {\n                        row.append(row.lastElementChild.cloneNode(true));\n                    });\n                    cols++;\n                }\n                break;\n            case removeColumn:\n                if (cols > min) {\n                    _to_consumable_array(table.children).forEach(function(row) {\n                        return row.lastElementChild.remove();\n                    });\n                    cols--;\n                }\n                break;\n            default:\n                break;\n        }\n        updateButtonState();\n    });\n});\n\n//# sourceMappingURL=index.dc57e6b6.js.map\n","'use strict';\n\nconst buttons = document.querySelectorAll('.button');\nconst addRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst addColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nconst table = document.querySelector('.field tbody');\nlet rows = table.querySelectorAll('tr').length;\nlet cols = table.querySelectorAll('tr')[0].children.length;\n\nconst max = 10;\nconst min = 2;\n\nconst updateButtonState = () => {\n  addRow.disabled = rows >= max;\n  removeRow.disabled = rows <= min;\n  addColumn.disabled = cols >= max;\n  removeColumn.disabled = cols <= min;\n};\n\n[...buttons].forEach((button) => {\n  button.addEventListener('click', (e) => {\n    switch (e.target) {\n      case addRow:\n        if (rows < max) {\n          table.append(table.lastElementChild.cloneNode(true));\n          rows++;\n        }\n        break;\n\n      case removeRow:\n        if (rows > min) {\n          table.lastElementChild.remove();\n          rows--;\n        }\n        break;\n\n      case addColumn:\n        if (cols < max) {\n          [...table.children].forEach((row) => {\n            row.append(row.lastElementChild.cloneNode(true));\n          });\n          cols++;\n        }\n        break;\n\n      case removeColumn:\n        if (cols > min) {\n          [...table.children].forEach((row) => row.lastElementChild.remove());\n          cols--;\n        }\n        break;\n\n      default:\n        break;\n    }\n    updateButtonState();\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","buttons","document","querySelectorAll","addRow","querySelector","removeRow","addColumn","removeColumn","table","rows","cols","children","updateButtonState","disabled","forEach","button","addEventListener","e","target","append","lastElementChild","cloneNode","remove","row"],"version":3,"file":"index.dc57e6b6.js.map"}